{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\rapidApi\\\\spotify\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        method: \"GET\",\n        url: \"https://dad-jokes-api1.p.rapidapi.com/dad_jokes\",\n        headers: {\n          \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n          \"X-RapidAPI-Host\": \"dad-jokes-api1.p.rapidapi.com\"\n        }\n      };\n      try {\n        const response = await axios.request(options);\n        setMovies(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []); // Le tableau vide en tant que deuxième argument signifie que cette fonction ne sera exécutée qu'une seule fois, équivalent à componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: movies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movie.joke\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","movies","setMovies","fetchData","options","method","url","headers","response","request","data","error","console","children","map","movie","index","joke","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/code/rapidApi/spotify/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        method: \"GET\",\n        url: \"https://dad-jokes-api1.p.rapidapi.com/dad_jokes\",\n        headers: {\n          \"X-RapidAPI-Key\": \"SIGN-UP-FOR-KEY\",\n          \"X-RapidAPI-Host\": \"dad-jokes-api1.p.rapidapi.com\",\n        },\n      };\n\n      try {\n        const response = await axios.request(options);\n        setMovies(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []); // Le tableau vide en tant que deuxième argument signifie que cette fonction ne sera exécutée qu'une seule fois, équivalent à componentDidMount\n\n  return (\n    <div>\n      {/* Utilisez la variable d'état \"movies\" dans votre composant */}\n      {movies.map((movie, index) => (\n        <div key={index}>{movie.joke}</div>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,iDAAiD;QACtDC,OAAO,EAAE;UACP,gBAAgB,EAAE,iBAAiB;UACnC,iBAAiB,EAAE;QACrB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,OAAO,CAACL,OAAO,CAAC;QAC7CF,SAAS,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDR,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA;IAAAe,QAAA,EAEGZ,MAAM,CAACa,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBlB,OAAA;MAAAe,QAAA,EAAkBE,KAAK,CAACE;IAAI,GAAlBD,KAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACrB,EAAA,CAjCQD,GAAG;AAAAuB,EAAA,GAAHvB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}