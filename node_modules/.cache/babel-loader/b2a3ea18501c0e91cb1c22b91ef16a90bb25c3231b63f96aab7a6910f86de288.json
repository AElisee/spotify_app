{"ast":null,"code":"var _jsxFileName = \"D:\\\\code\\\\rapidApi\\\\spotify\\\\src\\\\pages\\\\home\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport TopsMusicsComponents from \"../../components/TopsMusics/TopsMusicsComponents\";\nimport AlbumsCompoment from \"../../components/albums/AlbumsCompoment\";\nimport ArtistsComponent from \"../../components/artists/ArtistsComponent\";\nimport EpisodesComponent from \"../../components/episodes/EpisodesComponent\";\nimport FavoritesComponent from \"../../components/favorites/FavoritesComponent\";\nimport GenresComponent from \"../../components/genres/GenresComponent\";\nimport Header from \"../../components/header/Header\";\nimport Navbar from \"../../components/navbar/Navbar\";\nimport PodcastsComponent from \"../../components/podcasts/PodcastsComponent\";\nimport TracksComponent from \"../../components/tracks/TracksComponent\";\nimport \"./homePage.scss\";\nimport axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { getMoviesSucces } from \"../../redux/movies.slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const favorites = [];\n  const dispatch = useDispatch();\n  // const moviesData = useSelector((state) => state.movies.moviesData);\n  // // console.log(moviesData.albums);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const options = {\n        method: \"GET\",\n        url: \"https://spotify23.p.rapidapi.com/search/\",\n        params: {\n          q: \"q\",\n          type: \"multi\",\n          offset: \"0\",\n          limit: \"0\",\n          numberOfTopResults: \"5\"\n        },\n        headers: {\n          \"X-RapidAPI-Key\": \"9a36f48c15msh5ab07cd746f0d3ep1abc98jsn80b7c8e58d15\",\n          \"X-RapidAPI-Host\": \"spotify23.p.rapidapi.com\"\n        }\n      };\n      try {\n        const response = await axios.request(options);\n        setMovies(response.data);\n        console.log(movies);\n        dispatch(getMoviesSucces(response.data));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-page\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), favorites.length > 0 && /*#__PURE__*/_jsxDEV(FavoritesComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"9MtoBAyN9IkAqVU2ngbx/yFHhig=\", false, function () {\n  return [useDispatch];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["useEffect","useState","TopsMusicsComponents","AlbumsCompoment","ArtistsComponent","EpisodesComponent","FavoritesComponent","GenresComponent","Header","Navbar","PodcastsComponent","TracksComponent","axios","useDispatch","getMoviesSucces","jsxDEV","_jsxDEV","HomePage","_s","movies","setMovies","favorites","dispatch","fetchData","options","method","url","params","q","type","offset","limit","numberOfTopResults","headers","response","request","data","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["D:/code/rapidApi/spotify/src/pages/home/HomePage.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport TopsMusicsComponents from \"../../components/TopsMusics/TopsMusicsComponents\";\r\nimport AlbumsCompoment from \"../../components/albums/AlbumsCompoment\";\r\nimport ArtistsComponent from \"../../components/artists/ArtistsComponent\";\r\nimport EpisodesComponent from \"../../components/episodes/EpisodesComponent\";\r\nimport FavoritesComponent from \"../../components/favorites/FavoritesComponent\";\r\nimport GenresComponent from \"../../components/genres/GenresComponent\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport PodcastsComponent from \"../../components/podcasts/PodcastsComponent\";\r\nimport TracksComponent from \"../../components/tracks/TracksComponent\";\r\nimport \"./homePage.scss\";\r\nimport axios from \"axios\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getMoviesSucces } from \"../../redux/movies.slice\";\r\n\r\nconst HomePage = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const favorites = [];\r\n  const dispatch = useDispatch();\r\n  // const moviesData = useSelector((state) => state.movies.moviesData);\r\n  // // console.log(moviesData.albums);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://spotify23.p.rapidapi.com/search/\",\r\n        params: {\r\n          q: \"q\",\r\n          type: \"multi\",\r\n          offset: \"0\",\r\n          limit: \"0\",\r\n          numberOfTopResults: \"5\",\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"9a36f48c15msh5ab07cd746f0d3ep1abc98jsn80b7c8e58d15\",\r\n          \"X-RapidAPI-Host\": \"spotify23.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n      try {\r\n        const response = await axios.request(options);\r\n        setMovies(response.data);\r\n        console.log(movies);\r\n        dispatch(getMoviesSucces(response.data));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home-page\">\r\n      <Header />\r\n      <Navbar />\r\n      {favorites.length > 0 && <FavoritesComponent />}\r\n      {/* <AlbumsCompoment />\r\n      <ArtistsComponent />\r\n      <EpisodesComponent />\r\n      <GenresComponent />\r\n      <PodcastsComponent />\r\n      <TopsMusicsComponents />\r\n      <TracksComponent /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,oBAAoB,MAAM,kDAAkD;AACnF,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,gBAAgB,MAAM,2CAA2C;AACxE,OAAOC,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,kBAAkB,MAAM,+CAA+C;AAC9E,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,OAAOC,iBAAiB,MAAM,6CAA6C;AAC3E,OAAOC,eAAe,MAAM,yCAAyC;AACrE,OAAO,iBAAiB;AACxB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,eAAe,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMoB,SAAS,GAAG,EAAE;EACpB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B;EACA;;EAEAb,SAAS,CAAC,MAAM;IACd,MAAMuB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,OAAO,GAAG;QACdC,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,0CAA0C;QAC/CC,MAAM,EAAE;UACNC,CAAC,EAAE,GAAG;UACNC,IAAI,EAAE,OAAO;UACbC,MAAM,EAAE,GAAG;UACXC,KAAK,EAAE,GAAG;UACVC,kBAAkB,EAAE;QACtB,CAAC;QACDC,OAAO,EAAE;UACP,gBAAgB,EACd,oDAAoD;UACtD,iBAAiB,EAAE;QACrB;MACF,CAAC;MAED,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,OAAO,CAACX,OAAO,CAAC;QAC7CJ,SAAS,CAACc,QAAQ,CAACE,IAAI,CAAC;QACxBC,OAAO,CAACC,GAAG,CAACnB,MAAM,CAAC;QACnBG,QAAQ,CAACR,eAAe,CAACoB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAC1C,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IAEDhB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzB,OAAA,CAACR,MAAM;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV7B,OAAA,CAACP,MAAM;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACTxB,SAAS,CAACyB,MAAM,GAAG,CAAC,iBAAI9B,OAAA,CAACV,kBAAkB;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAQ5C,CAAC;AAEV,CAAC;AAAC3B,EAAA,CArDID,QAAQ;EAAA,QAGKJ,WAAW;AAAA;AAAAkC,EAAA,GAHxB9B,QAAQ;AAuDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}